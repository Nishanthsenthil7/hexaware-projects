create database ecommerce;
use ecommerce;

create table customers (
    customer_id int auto_increment primary key,
    first_name varchar(50),
    last_name varchar(50),
    email varchar(100),
    address varchar(255)
);

create table products (
    product_id int auto_increment primary key,
    name varchar(100),
    description text,
    price decimal(10,2),
    stockquantity int
);

create table cart (
    cart_id int auto_increment primary key,
    customer_id int,
    product_id int,
    quantity int,
    foreign key (customer_id) references customers(customer_id),
    foreign key (product_id) references products(product_id)
);

create table orders (
    order_id int auto_increment primary key,
    customer_id int,
    order_date date,
    total_price decimal(10,2),
    shipping_address varchar(255),
    foreign key (customer_id) references customers(customer_id)
);

create table order_items (
    order_item_id int auto_increment primary key,
    order_id int,
    product_id int,
    quantity int,
    itemamount decimal(10,2),
    foreign key (order_id) references orders(order_id),
    foreign key (product_id) references products(product_id)
);

insert into customers (customer_id, first_name, last_name, email, address) values
(1, 'john', 'doe', 'johndoe@example.com', '123 main st, city'),
(2, 'jane', 'smith', 'janesmith@example.com', '456 elm st, town'),
(3, 'robert', 'johnson', 'robert@example.com', '789 oak st, village'),
(4, 'sarah', 'brown', 'sarah@example.com', '101 pine st, suburb'),
(5, 'david', 'lee', 'david@example.com', '234 cedar st, district'),
(6, 'laura', 'hall', 'laura@example.com', '567 birch st, county'),
(7, 'michael', 'davis', 'michael@example.com', '890 maple st, state'),
(8, 'emma', 'wilson', 'emma@example.com', '321 redwood st, country'),
(9, 'william', 'taylor', 'william@example.com', '432 spruce st, province'),
(10, 'olivia', 'adams', 'olivia@example.com', '765 fir st, territory');

insert into products (product_id, name, description, price, stockquantity) values
(1, 'laptop', 'high-performance laptop', 800.00, 10),
(2, 'smartphone', 'latest smartphone', 600.00, 15),
(3, 'tablet', 'portable tablet', 300.00, 20),
(4, 'headphones', 'noise-canceling', 150.00, 30),
(5, 'tv', '4k smart tv', 900.00, 5),
(6, 'Coffee Maker', 'Automatic coffee maker', 50.00, 25),
(7, 'Refrigerator', 'Energy-efficient', 700.00, 10),
(8, 'Microwave Oven', 'Countertop microwave', 80.00, 15),
(9, 'Blender', 'High-speed blender', 70.00, 20),
(10, 'Vacuum Cleaner', 'Bagless vacuum cleaner', 120.00, 10);

INSERT INTO cart (cart_id, customer_id, product_id, quantity) VALUES
(1, 1, 1, 2),
(2, 1, 3, 1),
(3, 2, 2, 3),
(4, 3, 4, 4),
(5, 3, 5, 2),
(6, 4, 6, 1),
(7, 5, 1, 1),
(8, 6, 10, 2),
(9, 6, 9, 3),
(10, 7, 7, 2);

insert into orders (order_id, customer_id, order_date, total_price, shipping_address) values
(1, 1, '2023-01-05', 1200.00, '123 main st, city'),
(2, 2, '2023-02-10', 900.00, '456 elm st, town'),
(3, 3, '2023-03-15', 300.00, '789 oak st, village'),
(4, 4, '2023-04-20', 150.00, '101 pine st, suburb'),
(5, 5, '2023-05-25', 1800.00, '234 cedar st, district'),
(6, 6, '2023-06-30', 400.00, '567 Birch St, County'),
(7, 7, '2023-07-05', 700.00, '890 Maple St, State'),
(8, 8, '2023-08-10', 160.00, '321 Redwood St, Country'),
(9, 9, '2023-09-15', 140.00, '432 Spruce St, Province'),
(10, 10, '2023-10-20', 1400.00, '765 Fir St, Territory');

insert into order_items (order_item_id, order_id, product_id, quantity, itemamount) values
(1, 1, 1, 2, 1600.00),
(2, 1, 3, 1, 300.00),
(3, 2, 2, 3, 1800.00),
(4, 3, 5, 2, 1800.00),
(5, 4, 4, 4, 600.00),
(6, 4, 6, 1, 50.00),
(7, 5, 1, 1, 800.00),
(8, 5, 2, 2, 1200.00),
(9, 6, 10, 2, 240.00),
(10, 6, 9, 3, 210.00);


update products set price=800 where name='Refrigerator';

delete from cart where customer_id=1;

select * from products where price<100;

select * from products where stockquantity > 5;

select * from orders where total_price between 500 and 1000;

select * from products where name LIKE '%r';

select * from cart where customer_id = 5;

select distinct c.customer_id, c.first_name, c.last_name from customers c join orders o on c.customer_id = o.customer_id where year(o.order_date) = 2023;

select min(stockQuantity) as min_stock from products;

select customer_id,sum(total_price) as total_spend from orders group by customer_id;

select customer_id,avg(total_price) as avg_orderamount from orders group by customer_id;

select customer_id, count(order_id) as order_count from orders group by customer_id;

select customer_id, max(total_price) as maximum_orderamount from orders group by customer_id;

select customer_id, sum(total_price) as total_spend from orders group by customer_id having sum(total_price)>1000;

select * FROM products where product_id not in (select distinct product_id from cart);

select * from customers where customer_id not in (select distinct customer_id from orders);

select product_id, (SUM(itemAmount) / (select SUM(itemAmount) From order_items)) * 100 as revenue_percentage from order_items group by product_id;

SELECT * FROM products WHERE stockQuantity < 5;

select * from customers where customer_id in (select customer_id from orders where total_price > 1000);




