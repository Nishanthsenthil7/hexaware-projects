import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
    }
}

class Customer {
    private int customerID;
    private String firstName;
    private String lastName;
    private String email;
    private String phone;
    private String address;

    public Customer(int customerID, String firstName, String lastName, String email, String phone, String address) {
        this.customerID = customerID;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phone = phone;
        this.address = address;
    }

    public void calculateTotalOrders() {
        System.out.println("Total orders calculation logic here.");
    }

    public void getCustomerDetails() {
        System.out.println("Customer ID: " + customerID);
        System.out.println("Name: " + firstName + " " + lastName);
        System.out.println("Email: " + email);
        System.out.println("Phone: " + phone);
        System.out.println("Address: " + address);
    }

    public void updateCustomerInfo(String email, String phone, String address) {
        this.email = email;
        this.phone = phone;
        this.address = address;
        System.out.println("Customer info updated.");
    }
}

class Product {
    private int productID;
    private String productName;
    private String description;
    private double price;

    public Product(int productID, String productName, String description, double price) {
        this.productID = productID;
        this.productName = productName;
        this.description = description;
        this.price = price;
    }

    public int getProductID() {
        return productID;
    }

    public String getProductName() {
        return productName;
    }

    public double getPrice() {
        return price;
    }

    public void getProductDetails() {
        System.out.println("Product ID: " + productID);
        System.out.println("Name: " + productName);
        System.out.println("Description: " + description);
        System.out.println("Price: $" + price);
    }

    public void updateProductInfo(String description, double price) {
        this.description = description;
        this.price = price;
        System.out.println("Product info updated.");
    }

    public boolean isProductInStock() {
        return true;
    }
}

class Order {
    private int orderID;
    private Customer customer;
    private LocalDate orderDate;
    private double totalAmount;

    public Order(int orderID, Customer customer, LocalDate orderDate) {
        this.orderID = orderID;
        this.customer = customer;
        this.orderDate = orderDate;
        this.totalAmount = 0.0;
    }

    public void calculateTotalAmount() {
        System.out.println("Calculating total amount...");
    }

    public void getOrderDetails() {
        System.out.println("Order ID: " + orderID);
        System.out.println("Customer: " + customer);
        System.out.println("Order Date: " + orderDate);
        System.out.println("Total Amount: $" + totalAmount);
    }

    public void updateOrderStatus(String status) {
        System.out.println("Order status updated to: " + status);
    }

    public void cancelOrder() {
        System.out.println("Order has been canceled.");
    }
}

class OrderDetail {
    private int orderDetailID;
    private Order order;
    private Product product;
    private int quantity;

    public OrderDetail(int orderDetailID, Order order, Product product, int quantity) {
        this.orderDetailID = orderDetailID;
        this.order = order;
        this.product = product;
        this.quantity = quantity;
    }

    public double calculateSubtotal() {
        return product != null ? product.getPrice() * quantity : 0;
    }

    public void getOrderDetailInfo() {
        System.out.println("OrderDetail ID: " + orderDetailID);
        System.out.println("Product: " + product.getProductName());
        System.out.println("Quantity: " + quantity);
    }

    public void updateQuantity(int quantity) {
        this.quantity = quantity;
        System.out.println("Quantity updated.");
    }

    public void addDiscount(double discount) {
        System.out.println("Discount of " + discount + "% applied.");
    }
}

class Inventory {
    private int inventoryID;
    private Product product;
    private int quantityInStock;
    private LocalDate lastStockUpdate;

    public Inventory(int inventoryID, Product product, int quantityInStock, LocalDate lastStockUpdate) {
        this.inventoryID = inventoryID;
        this.product = product;
        this.quantityInStock = quantityInStock;
        this.lastStockUpdate = lastStockUpdate;
    }

    public Product getProduct() {
        return product;
    }

    public int getQuantityInStock() {
        return quantityInStock;
    }

    public void addToInventory(int quantity) {
        quantityInStock += quantity;
        System.out.println(quantity + " units added to inventory.");
    }

    public void removeFromInventory(int quantity) {
        quantityInStock -= quantity;
        System.out.println(quantity + " units removed from inventory.");
    }

    public void updateStockQuantity(int newQuantity) {
        quantityInStock = newQuantity;
        System.out.println("Inventory stock updated.");
    }

    public boolean isProductAvailable(int quantityToCheck) {
        return quantityInStock >= quantityToCheck;
    }

    public double getInventoryValue() {
        return product.getPrice() * quantityInStock;
    }

    public void listLowStockProducts(int threshold) {
        if (quantityInStock < threshold) {
            System.out.println("Product ID " + product.getProductID() + " is low in stock.");
        }
    }

    public void listOutOfStockProducts() {
        if (quantityInStock == 0) {
            System.out.println("Product ID " + product.getProductID() + " is out of stock.");
        }
    }

    public void listAllProducts() {
        System.out.println("Product: " + product.getProductName() + " - Stock: " + quantityInStock);
    }
}
